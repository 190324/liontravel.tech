---
- hosts: web
  vars:
    domainName: liontavel.tech
    webPath: /var/www/html
    adminWebPath: /var/www/html/liontravel.tech/admin/public
    projectPath: /var/www/html/liontravel.tech
    projectFrontendPath: /var/www/html/liontravel.tech/frontend
    projectBackendPath: /var/www/html/liontravel.tech/backend
    storagePath: /var/www/html/storage/liontravel.tech
  tasks:
    - name: nginx setting
      template:
        src: ../templates/nginx/sites-available/{{ item }}
        dest: /etc/nginx/sites-available/{{ item }}
      with_items:
        - "{{ domainName }}"
      become: yes

    - name: nginx ssl global setting folder extra create
      file:
        path: /etc/nginx/conf.d/extra
        state: directory
      become: yes

    - name: nginx ssl global setting
      template:
        src: ../templates/nginx/conf.d/extra/{{ item }}
        dest: /etc/nginx/conf.d/extra/{{ item }}
      with_items:
        - "ssl.conf"
      become: yes

    - name: Create a nginx config symbolic link
      file:
        src: /etc/nginx/sites-available/{{ item }}
        dest: /etc/nginx/sites-enabled/{{ item }}
        state: link
      with_items:
        - "{{ domainName }}"
      become: yes

    - import_role:
        name: nginx
        tasks_from: configtest
      become: yes

    # first install
    - name: check project directory exists
      stat:
        path: "{{ projectPath }}"
      register: check_project_folder

    - debug:
        msg: "project is exist"
      when: check_project_folder.stat.exists and check_project_folder.stat.isdir

    - name: git clone github
      shell: |
        cd {{ webPath }}
        git clone https://github.com/190324/liontravel.tech.git
      args:
        executable: /bin/bash
      when: check_project_folder.stat.exists == false

    - name: git pull github
      shell: |
        cd {{ projectPath }}
        git stash
        git pull origin master
      args:
        executable: /bin/bash
      when: check_project_folder.stat.exists

    - name: check frontend public is exist
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ projectFrontendPath }}/public/static"

    - name: frontend yarn install
      shell: |
        pm2 delete frontend --silent
        cd {{ projectFrontendPath }}
        cp {{ storagePath }}/deploy/frontend/.env {{ projectFrontendPath }}
        ln -s {{ storagePath }}/storage/* {{ projectFrontendPath }}/public/static/
        source ~/.nvm/nvm.sh
        yarn
        yarn build
        pm2 delete --silent "frontend"
        pm2 start ecosystem.yml --only "frontend"

      args:
        executable: /bin/bash

    - name: backend go setting
      shell: |
        cd {{ projectBackendPath }}
        cp {{ storagePath }}/deploy/backend/.env.yml {{ projectBackendPath }}
        source ~/.gvm/scripts/gvm
        gvm use go{{ version }} [--default]
        go run cmd/artisan.go gql

        go build cmd/server.go
        source ~/.nvm/nvm.sh
        pm2 delete --silent "backend"
        pm2 start ecosystem.yml --only "backend"

      args:
        executable: /bin/bash
      vars:
        version: 1.13.9
